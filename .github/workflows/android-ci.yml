name: Android CI

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      env-vars: ${{ steps.set-env.outputs.env-vars }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'gradle'

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Restore keystore
        run: |
          mkdir -p $GITHUB_WORKSPACE/appkey
          echo "$JKS_BASE64" | base64 --decode > $GITHUB_WORKSPACE/appkey/aflami-release-key.jks
        env:
          JKS_BASE64: ${{ secrets.JKS_BASE64 }}

      - name: Prepare signing env vars
        id: set-env
        run: |
          env_vars=$(cat <<EOF
          KEYSTORE_PATH=$GITHUB_WORKSPACE/appkey/aflami-release-key.jks
          KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS=${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}
          EOF
          )
          echo "env-vars=$env_vars" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup environment
        run: echo "${{ needs.setup.outputs.env-vars }}" >> $GITHUB_ENV

      - name: Build with Gradle
        run: ./gradlew build

  test-and-coverage:
    name: Run Unit Tests & Generate Coverage Report
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup environment
        run: echo "${{ needs.setup.outputs.env-vars }}" >> $GITHUB_ENV

      - name: Run tests and generate coverage
        run: |
          ./gradlew test
          ./gradlew koverXmlReport
          ./gradlew koverHtmlReport
          ./gradlew koverVerify

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: build/reports/kover/report.xml
          token: ${{ secrets.CODECOV_TOKEN }}